/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.smestaj;

import domain.Klijent;
import domain.Rezervacija;
import domain.Smestaj;
import form.ocena.FormNovaOcena;
import form.rezervacija.FormNovaRezervacija;
import form.smestaj.model.TableModelSmestaj;
import form.util.ListaSmestajaFormMode;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import sesija.Sesija;

/**
 *
 * @author user
 */
public class FormListaSmestaja extends javax.swing.JDialog {

    private int mode;

    /**
     * Creates new form FormListaSmestaja
     */
    public FormListaSmestaja(java.awt.Frame parent, boolean modal, int mode) {
        super(parent, modal);
        initComponents();
        this.mode = mode;
        pripremi(mode);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPretrazi = new javax.swing.JButton();
        txtKriterijum = new javax.swing.JTextField();
        btnObrisi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSmestaji = new javax.swing.JTable();
        btnDetalji = new javax.swing.JButton();
        btnRezervisi = new javax.swing.JButton();
        btnOceni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BuKing - Lista smestaja");

        btnPretrazi.setText("Pretrazi");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        tblSmestaji.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblSmestaji);

        btnDetalji.setText("Detalji");
        btnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiActionPerformed(evt);
            }
        });

        btnRezervisi.setText("Rezervisi");
        btnRezervisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRezervisiActionPerformed(evt);
            }
        });

        btnOceni.setText("Oceni");
        btnOceni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOceniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(328, Short.MAX_VALUE)
                .addComponent(btnDetalji)
                .addGap(12, 12, 12)
                .addComponent(btnOceni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnObrisi)
                .addGap(18, 18, 18)
                .addComponent(btnIzmeni)
                .addGap(18, 18, 18)
                .addComponent(btnRezervisi)
                .addGap(32, 32, 32))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(202, 421, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(202, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetalji)
                    .addComponent(btnRezervisi)
                    .addComponent(btnOceni)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPretrazi))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiActionPerformed
        try {
            int selectedRow = vratiOznacenRed();

            TableModelSmestaj model = (TableModelSmestaj) tblSmestaji.getModel();

            JDialog frmProduct = new FormNoviSmestaj(this, true, model.getSmestaj(selectedRow), ListaSmestajaFormMode.PRETRAZI);
            frmProduct.setVisible(true);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDetaljiActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        if (txtKriterijum.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Unesite kriterijum za pretragu", "Greska!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String kriterijum = txtKriterijum.getText();
        try {
            List<Smestaj> smestaji = Kontroler.getInstance().vratiSveSmestaje(kriterijum);
            TableModelSmestaj model = (TableModelSmestaj) tblSmestaji.getModel();
            model.setSmestaji(smestaji);
            model.fireTableDataChanged();
            if (smestaji == null || smestaji.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da pronadje nijedan smestaj po datom kriterijumu!", "Obavestenje", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Pretraga je uspesno zavrsena!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            }
            if (mode == ListaSmestajaFormMode.IZMENI) {
                btnIzmeni.setEnabled(true);
                pack();
            }
            if (mode == ListaSmestajaFormMode.OBRISI) {
                btnObrisi.setEnabled(true);
                pack();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        try {
            int selectedRow = vratiOznacenRed();

            TableModelSmestaj model = (TableModelSmestaj) tblSmestaji.getModel();
            if (!model.getSmestaj(selectedRow).getVlasnik().getKorisnickoIme().equals(Sesija.getInstance().getKorisnik().getKorisnickoIme())) {
                JOptionPane.showMessageDialog(this, "Ne mozete brisati smestaj koji niste vi kreirali!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JDialog frm = new FormNoviSmestaj(this, true, model.getSmestaj(selectedRow), mode);
            frm.setVisible(true);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        try {
            int selectedRow = vratiOznacenRed();

            TableModelSmestaj model = (TableModelSmestaj) tblSmestaji.getModel();
            if (!model.getSmestaj(selectedRow).getVlasnik().getKorisnickoIme().equals(Sesija.getInstance().getKorisnik().getKorisnickoIme())) {
                JOptionPane.showMessageDialog(this, "Ne mozete menjati podatke o smestaju koji niste vi kreirali!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JDialog frm = new FormNoviSmestaj(this, true, model.getSmestaj(selectedRow), mode);
            frm.setVisible(true);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnRezervisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRezervisiActionPerformed
        try {
            int selectedRow = vratiOznacenRed();

            TableModelSmestaj model = (TableModelSmestaj) tblSmestaji.getModel();

            JDialog frm = new FormNovaRezervacija(this, true, model.getSmestaj(selectedRow));
            frm.setVisible(true);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRezervisiActionPerformed

    private void btnOceniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOceniActionPerformed
        try {
            int selectedRow = vratiOznacenRed();

            TableModelSmestaj model = (TableModelSmestaj) tblSmestaji.getModel();

            JDialog frm = new FormNovaOcena(this, true, model.getSmestaj(selectedRow));
            frm.setVisible(true);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOceniActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalji;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOceni;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnRezervisi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSmestaji;
    private javax.swing.JTextField txtKriterijum;
    // End of variables declaration//GEN-END:variables

    private void pripremi(int mode) {
        try {
            switch (mode) {
                case ListaSmestajaFormMode.IZMENI:
                    btnObrisi.setVisible(false);
                    btnRezervisi.setVisible(false);
                    btnIzmeni.setEnabled(false);
                    btnOceni.setVisible(false);
                    break;
                case ListaSmestajaFormMode.OBRISI:
                    btnIzmeni.setVisible(false);
                    btnRezervisi.setVisible(false);
                    btnObrisi.setEnabled(false);
                    btnOceni.setVisible(false);
                    break;
                case ListaSmestajaFormMode.PRETRAZI:
                    btnIzmeni.setVisible(false);
                    btnRezervisi.setVisible(false);
                    btnObrisi.setVisible(false);
                    btnOceni.setVisible(false);
                    break;
                case ListaSmestajaFormMode.REZERVISI:
                    btnIzmeni.setVisible(false);
                    btnObrisi.setVisible(false);
                    btnOceni.setVisible(false);
                    break;
                case ListaSmestajaFormMode.OCENI:
                    btnIzmeni.setVisible(false);
                    btnObrisi.setVisible(false);
                    btnRezervisi.setVisible(false);
                    break;
                default:
                    break;
            }
            if (mode == ListaSmestajaFormMode.OCENI) {
                setLocationRelativeTo(null);
                Klijent trenutni = (Klijent) Sesija.getInstance().getKorisnik();
                List<Smestaj> s = new LinkedList<Smestaj>();
                for (Rezervacija sm : trenutni.getRezervacije()) {
                    if (!s.contains(sm.getSmestaj())) {
                        s.add(sm.getSmestaj());
                    }
                }
                TableModelSmestaj model = new TableModelSmestaj(s);
                tblSmestaji.setModel(model);
            } else {
                setLocationRelativeTo(null);
                List<Smestaj> s = Kontroler.getInstance().vratiSveSmestaje("");
                TableModelSmestaj model = new TableModelSmestaj(s);
                tblSmestaji.setModel(model);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja smestaja!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    private int vratiOznacenRed() throws Exception {
        int selectedRow = tblSmestaji.getSelectedRow();
        if (selectedRow == -1) {
            throw new Exception("Morate oznaciti smestaj!");
        }
        return selectedRow;
    }

    public void azurirajTabelu() throws Exception {
        List<Smestaj> s = Kontroler.getInstance().vratiSveSmestaje("");
        TableModelSmestaj model = (TableModelSmestaj) tblSmestaji.getModel();
        model.setSmestaji(s);
        model.fireTableDataChanged();
    }

    public void azurirajTabeluPosleOcene() {
        Klijent trenutni = (Klijent) Sesija.getInstance().getKorisnik();
        List<Smestaj> s = new LinkedList<Smestaj>();
        for (Rezervacija sm : trenutni.getRezervacije()) {
            if (!s.contains(sm.getSmestaj())) {
                s.add(sm.getSmestaj());
            }
        }
        TableModelSmestaj model = new TableModelSmestaj(s);
        tblSmestaji.setModel(model);
    }
}
