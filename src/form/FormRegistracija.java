/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import domain.Korisnik;
import form.util.FormPomoc;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import kontroler.Kontroler;

/**
 *
 * @author user
 */
public class FormRegistracija extends javax.swing.JFrame {

    /**
     * Creates new form FormRegistracija
     */
    public FormRegistracija(boolean vlasnicki) {
        initComponents();
        podesi(vlasnicki);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlVlasnicki = new javax.swing.JPanel();
        lblLicnaKarta = new javax.swing.JLabel();
        lblKontaktTelefon = new javax.swing.JLabel();
        txtLicnaKarta = new javax.swing.JTextField();
        txtTelefon = new javax.swing.JTextField();
        btnRegistracija = new javax.swing.JButton();
        pnlLicniPodaci = new javax.swing.JPanel();
        lblIme = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        lblJMBG = new javax.swing.JLabel();
        txtJMBG = new javax.swing.JTextField();
        lblPrezime = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblPasswordCheck = new javax.swing.JLabel();
        txtPasswordCheck = new javax.swing.JPasswordField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnPomoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BuKing - Forma za registraciju");
        setResizable(false);

        pnlVlasnicki.setBorder(javax.swing.BorderFactory.createTitledBorder("Dopuna licnih informacija (samo za vlasnike)"));

        lblLicnaKarta.setText("Broj licne karte: ");

        lblKontaktTelefon.setText("Kontakt telefon: ");

        javax.swing.GroupLayout pnlVlasnickiLayout = new javax.swing.GroupLayout(pnlVlasnicki);
        pnlVlasnicki.setLayout(pnlVlasnickiLayout);
        pnlVlasnickiLayout.setHorizontalGroup(
            pnlVlasnickiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVlasnickiLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pnlVlasnickiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLicnaKarta)
                    .addComponent(lblKontaktTelefon))
                .addGap(42, 42, 42)
                .addGroup(pnlVlasnickiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtLicnaKarta)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlVlasnickiLayout.setVerticalGroup(
            pnlVlasnickiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVlasnickiLayout.createSequentialGroup()
                .addGroup(pnlVlasnickiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLicnaKarta)
                    .addComponent(txtLicnaKarta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlVlasnickiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblKontaktTelefon)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnRegistracija.setText("Registruj se");
        btnRegistracija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistracijaActionPerformed(evt);
            }
        });

        pnlLicniPodaci.setBorder(javax.swing.BorderFactory.createTitledBorder("Licni podaci"));

        lblIme.setText("Ime: ");

        lblJMBG.setText("JMBG:");

        lblPrezime.setText("Prezime: ");

        txtPrezime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrezimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLicniPodaciLayout = new javax.swing.GroupLayout(pnlLicniPodaci);
        pnlLicniPodaci.setLayout(pnlLicniPodaciLayout);
        pnlLicniPodaciLayout.setHorizontalGroup(
            pnlLicniPodaciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLicniPodaciLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(pnlLicniPodaciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlLicniPodaciLayout.createSequentialGroup()
                        .addComponent(lblJMBG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLicniPodaciLayout.createSequentialGroup()
                        .addComponent(lblIme)
                        .addGap(18, 18, 18)
                        .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(lblPrezime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
        );
        pnlLicniPodaciLayout.setVerticalGroup(
            pnlLicniPodaciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLicniPodaciLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLicniPodaciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIme)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrezime)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlLicniPodaciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblJMBG))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci za nalog"));

        lblUsername.setText("Username: ");

        lblPassword.setText("Password: ");

        lblPasswordCheck.setText("Ponovite password: ");

        lblEmail.setText("E-mail adresa: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword)
                            .addComponent(txtUsername)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPasswordCheck)
                            .addComponent(lblEmail))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail)
                            .addComponent(txtPasswordCheck))))
                .addGap(106, 106, 106))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPasswordCheck)
                    .addComponent(txtPasswordCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnPomoc.setText("Pomoc");
        btnPomoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPomocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlVlasnicki, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btnPomoc, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistracija)
                .addGap(44, 44, 44))
            .addComponent(pnlLicniPodaci, javax.swing.GroupLayout.PREFERRED_SIZE, 492, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(pnlLicniPodaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlVlasnicki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistracija)
                    .addComponent(btnPomoc))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrezimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrezimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrezimeActionPerformed

    private void btnPomocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPomocActionPerformed
        FormPomoc frm = new FormPomoc(this, true);
        frm.setVisible(true);
    }//GEN-LAST:event_btnPomocActionPerformed

    private void btnRegistracijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistracijaActionPerformed
        String username = txtUsername.getText();
        String password = String.valueOf(txtPassword.getPassword());
        String JMBG = txtJMBG.getText();
        String ime = txtIme.getText();
        String prezime = txtPrezime.getText();
        String email = txtEmail.getText();
        String passwordCheck = String.valueOf(txtPasswordCheck.getPassword());
        String licnaKarta = txtLicnaKarta.getText();
        String telefon = txtTelefon.getText();

        HashMap<String, String> recnik = new HashMap<String, String>();
        recnik.put("ime", ime);
        recnik.put("prezime", prezime);
        recnik.put("JMBG", JMBG);
        recnik.put("username", username);
        recnik.put("password", password);
        recnik.put("passwordCheck", passwordCheck);
        recnik.put("email", email);
        recnik.put("licnaKarta", licnaKarta);
        recnik.put("telefon", telefon);
        try {
            validacija(recnik);

            Korisnik korisnik = Kontroler.getInstance().registracija(recnik);

            dispose();

            JFrame frmLogin = new FormLogin();
            frmLogin.setVisible(true);
            JOptionPane.showMessageDialog(frmLogin, "Uspesno ste kreirali nalog!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnRegistracijaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPomoc;
    private javax.swing.JButton btnRegistracija;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblIme;
    private javax.swing.JLabel lblJMBG;
    private javax.swing.JLabel lblKontaktTelefon;
    private javax.swing.JLabel lblLicnaKarta;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordCheck;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnlLicniPodaci;
    private javax.swing.JPanel pnlVlasnicki;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtJMBG;
    private javax.swing.JTextField txtLicnaKarta;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordCheck;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtTelefon;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void podesi(boolean vlasnicki) {
        pnlVlasnicki.setVisible(vlasnicki);
        pack();
    }

    private void popunjenaPolja(HashMap podaci) throws Exception {
        for (Object unos : podaci.values()) {
            String s = (String) unos;
            if (s.isEmpty()) {
                if ((podaci.get("licnaKarta").equals(unos) || podaci.get("telefon").equals(unos)) && !pnlVlasnicki.isVisible()) {
                    continue;
                }
                throw new Exception("Sva polja moraju biti popunjena!");
            }
        }

        /*for (String podatak : podaci) {
         if(podatak.isEmpty()) {
         throw new Exception("Sva polja moraju biti popunjena");
         }
         }*/
    }

    private void validacija(HashMap podaci) throws Exception {
        popunjenaPolja(podaci);
        validacijaIme((String) podaci.get("ime"));
        validacijaPrezime((String) podaci.get("prezime"));
        validacijaJMBG((String) podaci.get("JMBG"));
        validacijaPassword((String) podaci.get("password"), (String) podaci.get("passwordCheck"));
        validacijaEmail((String) podaci.get("email"));
        validacijaUsername((String) podaci.get("username"));
        if (pnlVlasnicki.isVisible()) {
            validacijaLK((String) podaci.get("licnaKarta"));
            validacijaTelefon((String) podaci.get("telefon"));
        }
    }

    private void validacijaIme(String ime) throws Exception {
        for (char ch : ime.toCharArray()) {
            if (!Character.isAlphabetic(ch)) {
                throw new Exception("Ime sme sadrzati samo slova!");
            }
        }
    }

    private void validacijaPrezime(String prezime) throws Exception {
        for (char ch : prezime.toCharArray()) {
            if (!Character.isAlphabetic(ch)) {
                throw new Exception("Prezime sme sadrzati samo slova!");
            }
        }
    }

    private void validacijaJMBG(String JMBG) throws Exception {
        if (JMBG.length() != 13) {
            throw new Exception("JMBG mora imati 13 cifara! Proverite vas JMBG i probajte ponovo!");
        }
        for (char ch : JMBG.toCharArray()) {
            if (!Character.isDigit(ch)) {
                throw new Exception("JMBG sme sadrzati samo cifre!");
            }
        }
    }

    private void validacijaPassword(String password, String passwordCheck) throws Exception {
        if (password.length() < 7) {
            throw new Exception("Lozinka mora sadrzati minimum 7 karaktera!");
        }
        boolean slovo = false;
        boolean broj = false;
        for (char ch : password.toCharArray()) {
            if (!Character.isAlphabetic(ch) && !Character.isDigit(ch)) {
                throw new Exception("Lozinka moze sadrzati samo slova i brojeve!");
            }
            if (Character.isAlphabetic(ch)) {
                slovo = true;
                continue;
            }
            if (Character.isDigit(ch)) {
                broj = true;
            }
        }
        if (!slovo || !broj) {
            throw new Exception("Lozinka mora sadrzati barem jedno slovo i barem jedan broj!");
        }
        if (!password.equals(passwordCheck)) {
            throw new Exception("Lozinka i ponovljena lozinka se ne podudaraju!");
        }
    }

    private void validacijaEmail(String email) throws Exception {
        if (!email.contains("@")) {
            throw new Exception("E-mail adresa mora sadrzati \"@\" znak!");
        }
    }

    private void validacijaUsername(String username) throws Exception {
        if (username.length() < 4) {
            throw new Exception("Username mora biti dugacak minimum 4 karaktera!");
        }
    }

    private void validacijaLK(String lk) throws Exception {
        if (lk.isEmpty()) {
            throw new Exception("Sva polja moraju biti popunjena!");
        }
        for (char ch : lk.toCharArray()) {
            if (!Character.isDigit(ch)) {
                throw new Exception("Broj licne karte sme sadrzati samo cifre!");
            }
        }
    }

    private void validacijaTelefon(String telefon) throws Exception {
        if (telefon.isEmpty()) {
            throw new Exception("Sva polja moraju biti popunjena!");
        }
        for (int i = 0; i < telefon.length(); i++) {
            if (!Character.isDigit(telefon.toCharArray()[i])) {
                if (telefon.toCharArray()[i] == '+' && i == 0) {
                    continue;
                }
                throw new Exception("Telefon moze sadrzati samo cifre i + na pocetku!");
            }
        }
    }

}
